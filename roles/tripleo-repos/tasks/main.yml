---
- name: Install and enable epel (centos7/rhel7)
  block:
    - name: Install epel-release
      package:
        name: epel-release
        state: present
    - name: Ensure EPEL repo is enabled
      ini_file:
        dest: /etc/yum.repos.d/epel.repo
        section: epel
        option: enabled
        value: '1'
        mode: 0644
  become: true
  when: ansible_distribution_major_version|int == 7

- name: install system packages
  become: true
  package:
    name: "{{ rpm_packages }}"
    state: present

- name: pip install tripleo-repos
  become: true
  pip:
    name: "{{ tripleo_repos_repository }}"
    virtualenv: "{{ workspace }}/venv"
    # https://github.com/ansible/ansible/issues/52275
    virtualenv_command: "/usr/bin/python3 -m venv"
    virtualenv_site_packages: true
  # NOTE(rfolco): we need to set both virtualenv_command and
  # ansible_python_interpreter, otherwise we hit this error:
  # Failed to import the required Python library (setuptools)
  # This happens in a dual python env like centos7.8
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Ensure EPEL repo is disabled
  become: true
  when: ansible_distribution_major_version|int == 7
  ini_file:
    dest: /etc/yum.repos.d/epel.repo
    section: epel
    option: enabled
    value: '0'
    mode: 0644

- name: Set branch for building containers check jobs
  set_fact:
    ci_branch: "{{ zuul.branch | regex_replace('(stable|cloudsig)/', '') }}"
  when: zuul is defined

- name: Set branch for building containers branchless
  set_fact:
    ci_branch: "{{ branch_override | regex_replace('(stable|cloudsig)/', '') }}"
  when: branch_override is defined

- name: Set branch for building containers periodic
  set_fact:
    ci_branch: "{{ release }}"
  when: release is defined

- name: Get /etc/os-release name
  shell: 'source /etc/os-release && echo -e -n "$NAME"'
  changed_when: false
  register: os_name_output

- name: Set stream false
  set_fact:
    is_stream_node: false

- name: Set stream true if stream node
  set_fact:
    is_stream_node: true
  when: "os_name_output.stdout_lines[0]| regex_search('(S|s)tream$')"

- name: Install repos
  become: true
  shell: |
    set -exo pipefail
    source {{ workspace }}/venv/bin/activate
    if [ -f /etc/ci/mirror_info.sh ]; then
      source /etc/ci/mirror_info.sh
      DISTRO_MIRROR_HOST="http://${NODEPOOL_MIRROR_HOST}"
    fi
    {% if ansible_distribution | lower == 'fedora' %}
    DISTRO_MIRROR_HOST=${DISTRO_MIRROR_HOST:-"{{ fedora_mirror_host }}"}
    {% elif ansible_distribution | lower == 'centos' %}
    DISTRO_MIRROR_HOST=${DISTRO_MIRROR_HOST:-"{{ centos_mirror_host }}"}
    {% endif %}
    RDO_MIRROR_HOST=${NODEPOOL_RDO_PROXY:-"{{ rdo_mirror_host }}"}

    if [ "{{ override_repos }}" != "" ]; then
        REPO="{{ override_repos }}"
    elif [ "{{ ci_branch | default('master') }}" == "master" ]; then
        REPO=current-tripleo
    else
        REPO=current
    fi

    if [ ! -z "$DISTRO_MIRROR_HOST" ]; then
        MIRROR="--mirror $DISTRO_MIRROR_HOST"

    # Workaround for setting nodepool centos mirror for delorean-deps
    # check launchpad tripleo/+bug/1922032
    else
        MIRROR="--mirror http://mirror.regionone.vexxhost.rdoproject.org/centos"
    fi

    if [ "{{ is_stream_node|string }}" == "True" ]; then
        tripleo-repos \
          -b "{{ ci_branch | default('master') }}" \
          $MIRROR \
          --rdo-mirror $RDO_MIRROR_HOST $REPO ceph opstools \
          --stream
    else
        tripleo-repos \
          -b "{{ ci_branch | default('master') }}" \
          $MIRROR \
          --rdo-mirror $RDO_MIRROR_HOST $REPO ceph opstools \
          --no-stream
    fi
  register: result
  changed_when: "'Installed:' in result.stdout_lines"
  args:
    warn: false

- name: Update all installed packages after new repos are setup  # noqa package-latest
  become: true
  package:
    name: '*'
    state: latest
