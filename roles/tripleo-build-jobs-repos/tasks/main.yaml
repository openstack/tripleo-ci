---
- name: Set the ci_branch fact
  include_role:
    name: build-containers
    tasks_from: set_ci_branch

- name: Get ci-common-vars
  include_role:
    name: ci-common-vars

- name: Set facts for release_file_name
  set_fact:
    release_file_name: "{{ 'promotion-testing-hash-' + ci_branch + '.yml' if 'periodic' in zuul.job else ci_branch + '.yml' }}"
    t_q_release_dir: "{{ tripleo_quickstart_dir }}/config/release/tripleo-ci/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}"
    whole_disk_images: true
    enable_opstools_repo: true  # for collectd container build

- name: "fetch {{ release_file_name }} into ansible executor work_root"
  fetch:
    src: "{{ t_q_release_dir }}/{{ release_file_name }}"
    dest: "{{ zuul.executor.work_root }}/"
    flat: true

- name: Load vars from release file
  include_vars:
    file: "{{ zuul.executor.work_root }}/{{ release_file_name }}"

- name: Remove pip package if already installed
  become: true
  package:
    name: python3-pip
    state: absent

- name: Get pip needed for tripleo-repos installation
  include_role:
    name: ensure-pip
  vars:
    ensure_pip_from_packages: false
    ensure_pip_from_upstream: true

- name: install tripleo-repos from git checkout
  shell: |
    pushd "{{ ansible_user_dir }}/{{ zuul.projects['opendev.org/openstack/tripleo-repos'].src_dir }}"
    python setup.py install --user
    popd
  failed_when: false
  changed_when: true

- name: Include repo-setup role
  include_role:
    name: repo-setup
  vars:
    repo_setup_dir: "{{ workspace }}"
    repo_setup_use_collections: false

- name: Install python3-tripleoclient python3-virtualenv
  become: true
  package:
    name:
      - python3-virtualenv
      - python3-tripleoclient
    state: latest
